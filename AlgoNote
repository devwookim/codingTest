1회독

📌자료형

😀수 자료형 연산😀

#round
=>round(실수, 반올림 하고자 하는 위치 -1)

# 몫 구하기
=> a//b

# 제곱근
=> a**b  => a의 b승


😀리스트 자료형😀

# 크기가 n이고 모든 값이 0인 1차원 리스트 초기화
=> list = [0] * n

# 리스트 슬라이싱
=> list[0 : n] 
=> 0 ~ n-1 인덱스까지 처리

# 0부터 19까지의 수 중에서 홀수만 포함하는 리스트
=> list = [ i for i in range (20) if i % 2 == 1 ]

# 2차원 리스트 초기화
=> n = 3, m = 4
=> list = [ [0] * m for _ in range(n) ] 
❗  _(언더바) 사용 이유 => 반복을 위한 변수 값은 무시하려고

# 리스트 관련 메서드
=> list.append(2) => 원소 하나 삽입할 때 

=> list.sort() or list.sort(reverse=True) => 정렬

=> list.reverse() => 원소 뒤집기

=> list.insert(삽입할 인덱스, 값) 

=> list.count(3) => 3 인 갯수 세기 

=> list.remove(1) => 값이 1인 데이터 삭제

❗ 특정한 값의 원소를 모두 제거하려면 ? 
a = [1, 2, 3, 4, 5, 5, 5]
remove_set = {3 , 5}
result = [ i for i in a if i not in remove_set ] 


😀문자열😀

# 따옴표 관련
=> 따옴표 앞 \(역슬래쉬)하면 문자로 인식

# 문자열 덧셈 곱셈 가능

# 실행속도 관련
=> import sys
=> sys.stdin.readline().rstrip()

# 문자열도 인덱싱과 슬라이싱 가능

# f-String 문법
=> answer = 7 
=> print(f"정답은 {answer} 입니다.")


😀n*n 크기의 판에서 움직이는 법😀
steps or move_types로 좌표를 지정해두자
